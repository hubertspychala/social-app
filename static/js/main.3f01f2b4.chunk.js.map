{"version":3,"sources":["PostsList.js","LoginPage.js","validateInfo.js","useForm.js","SignUpPage.js","SocialApp.js","reportWebVitals.js","index.js"],"names":["PostsList","props","useState","latestPosts","setLatestPost","useEffect","axios","post","headers","Accept","then","res","console","log","prevState","result","concat","data","catch","err","posts","map","changingArrayToDiv","className","src","user","avatar_url","alt","content","id","LoginPage","placeholder","type","validateInfo","values","errors","username","trim","email","password","length","search","password2","useForm","setValues","setErrors","setIsSubmitted","handleChange","e","target","name","value","handleSubmit","preventDefault","SignUpPage","isSubmitted","onSubmit","htmlFor","minLength","onChange","href","Layout","to","NoMatch","SocialApp","path","element","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f01f2b4.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport \"./PostsList.css\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst PostsList = (props) => {\r\n  const [latestPosts, setLatestPost] = useState([]);\r\n\r\n  function getLatestPosts() {\r\n    let axiosConfig = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        \"https://akademia108.pl/api/social-app/post/latest\",\r\n        {},\r\n        axiosConfig\r\n      )\r\n      .then((res) => {\r\n        console.log(\"RESPONSE RECEIVED: \", res);\r\n        setLatestPost((prevState) => {\r\n          const result = prevState.concat(res.data);\r\n          console.log(result);\r\n          return result;\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"AXIOS ERROR: \", err);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getLatestPosts();\r\n  }, []);\r\n\r\n  const posts = latestPosts.map((changingArrayToDiv) => {\r\n    return (\r\n      <div className=\"post-container\" key={changingArrayToDiv.id}>\r\n        <div className=\"post-header\">\r\n          <div className=\"avatar\">\r\n            <img src={changingArrayToDiv.user.avatar_url} alt=\"\" />\r\n          </div>\r\n          <div className=\"nickname\"></div>\r\n          <div className=\"post-date\"></div>\r\n        </div>\r\n        <div className=\"post-content\">{changingArrayToDiv.content}</div>\r\n        <div className=\"post-likes\">\r\n          <img className=\"heart-logo\" src=\"\" alt=\"\" />\r\n          <p className=\"likes-number\"></p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  console.log(posts);\r\n  return <div className=\"posts-list\">{posts}</div>;\r\n};\r\nexport default PostsList;\r\n","import React from \"react\";\r\nimport \"./LoginPage.css\";\r\n\r\nconst LoginPage = (props) => {\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login Page </h2>\r\n      <input placeholder=\"User Name\" type=\"text\" />\r\n      <input placeholder=\"Password\" type=\"text\" />\r\n      <button type=\"submit\">Login</button>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginPage;\r\n","export default function validateInfo(values) {\r\n  let errors = {};\r\n\r\n  if (!values.username.trim()) {\r\n    errors.username = \"Username required\";\r\n  }\r\n  if (!values.email.trim()) {\r\n    errors.email = \"Email required\";\r\n  }\r\n  if (!values.password.trim()) {\r\n    errors.password = \"Password is required\";\r\n  }\r\n  if (values.password.length < 6) {\r\n    errors.password = \"Password needs to be 6 characters\";\r\n  } else if (\r\n    values.password.search(/[!,#,@,$,%]/) < 0 &&\r\n    values.password.search(/[0-9]/) < 0 &&\r\n    values.password.length < 6\r\n  ) {\r\n    errors.password =\r\n      \"Password needs to be 6 characters, must contain one number and one of charts: ! # @ $ %\";\r\n  } else if (values.password.search(/[0-9]/) < 0) {\r\n    errors.password = \"Password must contain one number\";\r\n  } else if (values.password.search(/[!,#,@,$,%]/) < 0) {\r\n    errors.password = \"Password must contain one of charts: ! # @ $ %\";\r\n  }\r\n\r\n  if (!values.password2) {\r\n    errors.password2 = \"Password is required\";\r\n  } else if (values.password2 !== values.password) {\r\n    errors.password2 = \"Passwords do not match\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport validateInfo from \"./validateInfo\";\r\n\r\nconst useForm = (validateInfo) => {\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setErrors(validateInfo(values));\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  return { handleChange, values, handleSubmit, errors };\r\n};\r\nexport default useForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./SignUpPage.css\";\r\nimport useForm from \"./useForm\";\r\nimport validateInfo from \"./validateInfo\";\r\n\r\nconst SignUpPage = () => {\r\n  const { handleChange, values, handleSubmit, errors, isSubmitted } =\r\n    useForm(validateInfo);\r\n\r\n  return (\r\n    <div className=\"form-contnet\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <h1>Sign-Up</h1>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"username\" className=\"form-label\">\r\n            Username\r\n          </label>\r\n          <input\r\n            id=\"username\"\r\n            placeholder=\"Enter your username\"\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            minLength=\"4\"\r\n            value={values.username}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.username && <p>{errors.username}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            className=\"form-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password2\" className=\"form-label\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            id=\"password2\"\r\n            placeholder=\"Confirm your password\"\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && <p>{errors.password2}</p>}\r\n        </div>\r\n        <button className=\"form-input-btn\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n        <span className=\"form-input-login\">\r\n          Already have an account? Login <a href=\"#\">here</a>\r\n        </span>\r\n      </form>\r\n      {isSubmitted ? (\r\n        <div className=\"succes-message\">\r\n          Succes! Thank for your registeration!\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n\r\n// const SignUpPage = (props) => {\r\n//   const [values, setValues] = useState({\r\n//     userName: \"\",\r\n//     emailAdress: \"\",\r\n//     password: \"\",\r\n//   });\r\n\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [valid, setValid] = useState(false);\r\n\r\n//   const handleUserNameInputChange = (event) => {\r\n//     setValues({ ...values, userName: event.target.value });\r\n//   };\r\n\r\n//   const handleEmailAdressInputChange = (event) => {\r\n//     setValues({ ...values, emailAdress: event.target.value });\r\n//   };\r\n\r\n//   const handlePasswordInputChange = (event) => {\r\n//     setValues({ ...values, password: event.target.value });\r\n//   };\r\n\r\n//   const handelSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     if (values.userName && values.emailAdress && values.password) {\r\n//       setValid(true);\r\n//     }\r\n//     setSubmitted(true);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login\">\r\n//       <h2>Sign Up </h2>\r\n//       <form className=\"register-form\" onSubmit={handelSubmit}>\r\n//         <input\r\n//           onChange={handleUserNameInputChange}\r\n//           value={values.userName}\r\n//           placeholder=\"User Name\"\r\n//           type=\"text\"\r\n//           minLength=\"4\"\r\n//         />\r\n//         {submitted && !values.userName ? (\r\n//           <span>Please enter your name</span>\r\n//         ) : null}\r\n\r\n//         <input\r\n//           onChange={handleEmailAdressInputChange}\r\n//           value={values.emailAdress}\r\n//           placeholder=\"Email adress\"\r\n//           type=\"email\"\r\n//         />\r\n//         {submitted && !values.emailAdress ? (\r\n//           <span>Please enter your e-mail</span>\r\n//         ) : null}\r\n//         <input\r\n//           onChange={handlePasswordInputChange}\r\n//           placeholder=\"Password\"\r\n//           type=\"password\"\r\n//         />\r\n//         {submitted && !values.password ? (\r\n//           <span>Enter your password</span>\r\n//         ) : null}\r\n//         <input placeholder=\"Confirm password\" type=\"password\" />\r\n//         <button type=\"submit\">Sign Up</button>\r\n//       </form>\r\n//       {submitted && valid ? (\r\n//         <div className=\"succes-message\">\r\n//           Succes! Thank for your registeration!\r\n//         </div>\r\n//       ) : null}\r\n//     </div>\r\n//   );\r\n// };\r\n// export default SignUpPage;\r\n","import \"./SocialApp.css\";\nimport PostsList from \"./PostsList\";\nimport LoginPage from \"./LoginPage\";\nimport SignUpPage from \"./SignUpPage\";\nimport React, { Component, useState, Redirect } from \"react\";\nimport {\n  Routes,\n  Route,\n  Outlet,\n  Link,\n  BrowserRouter,\n  // Redirect,\n} from \"react-router-dom\";\n\nfunction SocialApp() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" />\n      <BrowserRouter>\n        <Routes>\n          {/* <Redirect from=\"/\" to=\"/Feed\" /> */}\n          <Route path=\"/\" element={<Layout />}>\n            <Route index path=\"/\" element={<PostsList />} />\n            <Route path=\"login\" element={<LoginPage />} />\n            <Route path=\"signUp\" element={<SignUpPage />} />\n            <Route path=\"*\" element={<NoMatch />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nfunction Layout() {\n  return (\n    <div>\n      <nav className=\"main-nav\">\n        <Link className=\"main-nav-link\" to=\"/\">\n          Social-app\n        </Link>\n        <Link className=\"main-nav-link\" to=\"/login\">\n          Login\n        </Link>\n        <Link className=\"main-nav-link\" to=\"/signUp\">\n          Sign-up\n        </Link>\n      </nav>\n      <div className=\"outlet\">\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default SocialApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport SocialApp from \"./SocialApp\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SocialApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}